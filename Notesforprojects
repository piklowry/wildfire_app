Location.where("wildfire_id = 13")

def self.search(search)
  if search
    Wildfire.includes(:locations).where(:locations => {:city => "%#{search}%"}).all
  else
    find(:all)
  end
 end
end

def self.search(search)
  if search
    Location.where("wildfire_id = 13")
  else
    find(:all)
  end
 end
end


class Wildfire < ActiveRecord::Base

  has_many :locations

  def self.search(search)
    Wildfire.joins.(:locations).where("locations.wildfire_id like ? OR locations.state like ? OR locations.city like ? OR area_burned like ? OR description like ?",  "%#{search}%", "%#{search}%", "%#{search}%", "%#{search}%", "%#{search}%")
  end
end


class Wildfire < ActiveRecord::Base

  has_many :locations

  def self.search(search)
    Wildfire.joins("INNER JOIN locations ON wildfire.id = locations.wildfire_id")
  end
end

def self.search(search)
  if search
    Wildfire.joins(:locations).where("locations.city LIKE ?' => %#{search}%")
  else
    find(:all)
  end
 end
end

def self.search(search)
  if search
    Wildfire.joins(:locations).where(:conditions => {'name LIKE ?' => "%#{search}%"}).all
  else
    find(:all)
  end
 end
end

def self.search(search)
  if search
    Wildfire.joins(:locations).where(:conditions => {'city LIKE ?' => "%#{search}%"}).all
  else
    find(:all)
  end
 end
end

def self.search(search)
  if search
    Location.joins(:wildfires).where(:conditions => {'city LIKE ?' => "%#{search}%"}).all
  else
    find(:all)
  end
 end
end


def self.search_two(search)
  if search
    Wildfire.includes(:locations).where(:locations => {:city => "%#{search}%"}).all
  else
    find(:all)
  end
 end
end




def self.search_two(search)
  if search
    Wildfire.includes(:locations).where(:locations => {:city => "%#{search}%"}).all
  else
    find(:all)
  end
 end
end


Wildfire.joins(:locations).where(:conditions => {:city = "%#{search}%"})

Wildfire.joins(:locations).where(:conditions => {:city = "Tampa"})




def self.search(search)
  if search
    Wildfire.includes(:locations).where(:locations => {:city => "%#{search}%"}).all
  else
    find(:all)
  end
 end
end







def self.search(search)
  if search
    Wildfire.find(:locations).where(:locations => {:city => "%#{search}%"}).all
  else
    find(:all)
  end
 end
end

def self.search(search)
  if search
    Wildfire.includes(:locations).where(:locations => {:city => "%#{search}%"}).all
  else
    find(:all)
  end
 end
end

Wildfire.includes(:locations).where(:locations => {:city => "%#{search}%"}).


def self.search(search)
  if search
  	@new_fire = Wildfire.find(params[:search])
    @new_fire = Wildfire.joins(:locations).where(:wildfires => {:city = "%#{search}%"})
    puts params
  else
    @new_fire = Wildfire.all
  end
 end
end

def self.search(search)
  if search
  	@new_fire = Wildfire.find(params[:search])
    @new_fire = Wildfire.joins(:locations).where(:wildfires => {:city = "%#{search}%"})
    puts params
  else
    @new_fire = Wildfire.all
  end
 end
end

Wildfire.joins(:locations).
where(:wildfires => {:conditions = "tampa"})

def self.search(search)
  if search
  	Wildfire.includes(:locations).where(:locations => {:city => "%#{search}%"}).all
    find(:all.:conditions => ['name LIKE ?', "%#{search}%"])
  else
    find(:all)
  end
 end
end

def self.search(search)
  if search
    find(:all, :conditions => ['name LIKE ?', "%#{search}%"])
  else
    find(:all)
  end
 end
end

def self.search(search)
  if search
    find(:all, :conditions => ['name LIKE ?', "%#{search}%"])
  else
    find(:all)
  end
 end
end


Wildfire.joins(:locations).
where(:wildfires => {:city = "tampa"})

Wildfire.joins(:locations).
where(:wildfires => {:city = "%#{search}%"})


# def self.search(search)
#   if params[:search]
#   	@new_search = Wildfire.joins(:locations)
# 			puts @new_search
#   elsif params[:search] 
#     search = find(:all, :conditions => ['name LIKE ?', "%#{search}%"])
#   else
#     @wildfires = Wildfire.all
#   end
#  end
# end

# def self.search(search)
#   if params[:search]
#   	@wildfire = Wildfire.search(params[:search])
#   elsif params[:search] 
#     search = find(:all, :conditions => ['name LIKE ?', "%#{search}%"])
#   else
#     @wildfires = Wildfire.all
#   end
#  end
# end


"SELECT 'wildfires'.* FROM 'wildfires' INNER JOIN 'locations' ON 'locations'.wildfire_id' = 'wildfires'.'id' WHERE 'wildfires'.'name'='Forest Fire'"


"SELECT 'locations'.* FROM 'locations' INNER JOIN 'wildfires' ON 'wildfires'.wildfire_id' = 'locations'.'id' WHERE 'locations'.'name'='Tampe'"


class Wildfire < ActiveRecord::Base
    has_many :locations


  # def self.search(search)
 #  if search
 #    find(:all, :conditions => ['name LIKE ?', "%#{search}%"])
 #  else
 #    find(:all)
 #  end
 # end

 ##scopes ##
  # scope :bigwildfires -> { where(acres_burned: "Big Wild Fire")}
  scope :casualties, -> {where(death_toll: false )  }
  # scope :with_acres_burned, -> (acres_burned) { where('acres_burned = ?', acres_burned)}


  def self.with_acres_burned(acres_burned)
    # if acres_burned.blank? - i could do logic in here if i want
    where('locations.acres_burned LIKE ?', acres_burned)
  end

  def self.search(params)
    # debugger
    name = params[:name]
    acres_burned = params[:acres_burned]


    search = Wildfire.all


    # if acres_burned.present?
  #     search = search.with_acres_burned(acres_burned)
  #   end

    if acres_burned.present?
      search = search.joins(:locations).where('locations.state LIKE ?',"%#{name}%")
    end

    if name.present?
      # search = search.where('name LIKE ?', "%#{name}%")
      search = search.joins(:locations).where('locations.city LIKE ?', "%#{name}%")
    end

    # if name.present?
  #     search = search.find_by_sql("SELECT * FROM wildfires
    #   INNER JOIN locations ON wildfires.id = locations.wildfires_id
    #   ORDER BY wildfires.created_at desc")
    # end

    # if name.present?
  #     search = search.find_by_sql("SELECT * FROM locations
    #   INNER JOIN wildfires ON locations.wildfires_id = wildfires.id
    #   ORDER BY wildfires.created_at desc")
    # end
 



    search
  end



end





